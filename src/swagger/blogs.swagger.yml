openapi: 3.0.0
info:
    title: Blog API
    version: 1.0.0
    description: Blog API documentation

tags:
    - name: Blogs
      description: API for managing blogs


paths:
    /api/blogs:
        get:
            parameters:
                - name: searchNameTerm
                  in: query
                  description: 'Search term for blog Name: Name should contains this term in any position'
                  required: false
                  schema:
                      type: string
                      default: null
                - name: sortBy
                  in: query
                  schema:
                      type: string
                      default: createdAt
                - name: sortDirection
                  in: query
                  schema:
                      type: string
                      description: 'Default value: desc'
                      default: desc, asc
                - name: pageNumber
                  in: query
                  description: 'pageNumber is number of portions that should be returned'
                  schema:
                      type: integer
                      default: 1
                - name: pageSize
                  in: query
                  schema:
                      type: integer
                      description: 'pageSize is number of portions that should be returned'
                      default: 10
            summary: Get a list of all blogs
            tags: [ Blogs ]
            responses:
                200:
                    description: List of all blogs
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Paginator<h03.BlogViewModel>'

        post:
            summary: Create New Blog
            tags: [ Blogs ]
            responses:
                200:
                    description: List of all blogs
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/BlogInputModel'
                400:
                    description: 'If the inputModel has incorrect values'
                    content:
                        text/plain:
                            schema:
                                    $ref: '#/components/schemas/APIErrorResult'
                401:
                    description: 'Unauthorized'
    /api/blogs/{blogId}/posts:
        get:
            summary: Retern post by BlogId
            tags: [ Blogs ]
        post:
            summary: Create new Post for specific blog
            tags: [Blogs]
    /api/blogs{id}:
        get:
            parameters:
                - name: id
                  in: path
                  required: true
                  description: "Existing blog id"
                  schema:
                      type: string

            summary: Returns blog by id
            tags: [ Blogs ]
            responses:
                200:
                    description: Success
                    content:
                        text/plain:
                            schema:
                                $ref:
                                        '#/components/schemas/BlogViewModel'
                404:
                    description: Not found
        put:
            summary: Update blog
            tags: [ Blogs ]
        delete:
            summary: Delete blog
            tags: [ Blogs ]



components:
    schemas:
        APIErrorResult:
            type: object
            properties:
                errorsMessages:
                    type: array
                    nullable: true
                    items:
                        $ref: '#/components/schemas/FieldError'

        FieldError:
            type: object
            properties:
                field:
                    type: string
                    nullable: true
                    description: Message with error explanation for certain field
                    example: 'name'
                message:
                    type: string
                    nullable: true
                    description: What field/property of input model has error
                    example: 'Invalid name'
            required:
                - field
                - message


        Paginator<h03.BlogViewModel>:
            type: object
            properties:
                pagesCount:
                    type: integer
                    example: 5
                page:
                    type: integer
                    example: 1
                pageSize:
                    type: integer
                    example: 10
                totalCount:
                    type: integer
                    example: 42
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/BlogViewModel'
            required:
                - pagesCount
                - page
                - pageSize
                - totalCount
                - items


        BlogViewModel:
            type: object
            properties:
                id:
                    type: integer
                    example: 2
                name:
                    type: string
                    example: "Tom Rider"
                description:
                    type: string
                    example: "Experienced professional driver"
                websiteUrl:
                    type: string
                    example: "https://example.com/blog"
                createdAt:
                    type: string
                    format: date-time
                    example: "2023-03-05T12:00:00Z"
                isMembership:
                    type: boolean
                    example: false
            required:
                - id
                - name
                - description
                - websiteUrl
                - createdAt
                - isMembership
        BlogInputModel:
            type: object
            properties:
                name:
                    type: string
                    maxLength: 15
                description:
                    type: string
                    maxLength: 500
                website:
                    type: string
                    maxLength: 100
                    pattern: ^https://([a-zA-Z0-9_-]+\.)+[a-zA-Z0-9_-]+(\/[a-zA-Z0-9_-]+)*\/?
            required:
                - name
                - description
                - website