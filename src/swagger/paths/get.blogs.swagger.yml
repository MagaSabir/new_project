paths:
  /api/blogs/{blogId}/posts:
    get:
      parameters:
        - name: searchNameTerm
          in: query
          description: 'Search term for blog Name: Name should contains this term in any position'
          required: false
          schema:
            type: string
            default: null
        - name: sortBy
          in: query
          schema:
            type: string
            default: createdAt
        - name: sortDirection
          in: query
          schema:
            type: string
            description: 'Default value: desc'
            default: desc, asc
        - name: pageNumber
          in: query
          description: 'pageNumber is number of portions that should be returned'
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            description: 'pageSize is number of portions that should be returned'
            default: 10
      summary: Get a list of all blogs
      tags: [ Blogs ]
      responses:
        200:
          description: List of all blogs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostPaginator'


  /api/blogs{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: "Existing blog id"
          schema:
            type: string

      summary: Returns blog by id
      tags: [ Blogs ]
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                $ref:
                  '#/components/schemas/BlogViewModel'
        404:
          description: Not found
    put:
      summary: Update blog
      tags: [ Blogs ]
    delete:
      summary: Delete blog
      tags: [ Blogs ]



#components:
#  schemas:
#    PostPaginator:
#      type: object
#      properties:
#        pagesCount:
#          type: integer
#          example: 5
#        page:
#          type: integer
#          example: 1
#        pageSize:
#          type: integer
#          example: 10
#        totalCount:
#          type: integer
#          example: 42
#        items:
#          type: array
#          items:
#            $ref: '#/components/schemas/PostViewModel'
#
#
#    PostViewModel:
#      type: object
#      properties:
#        id:
#          type: integer
#          example: 1
#        title:
#          type: string
#          example: 'title'
#        shortDescription:
#          type: string
#          example: 'lalala'
#        content:
#          type: string
#          example: 'With some content'
#        blogId:
#          type: string
#          example: '1lk3lkc4t23knr43k'
#        blogName:
#          type: string
#          example: 'Blog Name'
#        createdAt:
#          type: string
#          example: "2025-05-19T17:35:27.374Z"
#      required:
#        - id
#        - title
#        - shortDescription
#        - content
#        - blogId
#        - blogName
#        - createdAt